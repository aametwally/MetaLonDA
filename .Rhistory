pwr.t2n.test(n1=30, n2=150, sig.level = 0.05, alternative = "two.sided", power = 0.8)
library(pwr)
120*0.18
22/1.15
78/1.15
26/276
20/1.15
70/1.15
pwr.t2n.test(n1=18, n2=61, sig.level = 0.05/30, alternative = "two.sided", power = 0.8)
pwr.t2n.test(n1=18, n2=61, sig.level = 0.05, alternative = "two.sided", power = 0.8)
pwr.t2n.test(n1=18, n2=61, sig.level = 0.05/10, alternative = "two.sided", power = 0.8)
pwr.t2n.test(n1=18, n2=61, sig.level = 0.05/5, alternative = "two.sided", power = 0.8)
120*0.18
120*0.72
120*0.82
90/1.15
pwr.t2n.test(n1=18, n2=78, sig.level = 0.05, alternative = "two.sided", power = 0.8)
78+18
150*0.2
160*20
160*.20
170*.20
170*.80
130/1.15
30/1.15
pwr.t2n.test(n1=113, n2=26, sig.level = 0.05, alternative = "two.sided", power = 0.8)
library("pwr")
pwr.t2n.test(n1=113, n2=26, sig.level = 0.05, alternative = "two.sided", power = 0.8)
pwr.t2n.test(n1=113, n2=26, sig.level = 0.05/30, alternative = "two.sided", power = 0.8)
pwr.t2n.test(n1=113, n2=26, sig.level = 0.05/20, alternative = "two.sided", power = 0.8)
pwr.t2n.test(n1=113, n2=26, sig.level = 0.05/10, alternative = "two.sided", power = 0.8)
113+26
pwr.t2n.test(n1=113, n2=26, sig.level = 0.05/10, alternative = "two.sided", power = 0.8)
library("pwr")
pwr.t2n.test(n1=90, n2=38, sig.level = 0.05/10, alternative = "two.sided", power = 0.8)
pwr.t2n.test(n1=90, n2=38, sig.level = 0.05/30, alternative = "two.sided", power = 0.8)
pwr.t2n.test(n1=77, n2=34, sig.level = 0.05/30, alternative = "two.sided", power = 0.8)
install.packages("metalonda")
install.packages("MetaLonDA")
library("metalonda")
library("MetaLonDA")
?metalonda
version
?curveFitting
(250/280)*log2(250/280)+(20/280)*log2(20/280)+(10/280)*log2(10/280)
(250/280)
install.packages("MetaLonDA")
library(MetaLonDA)
?metalonda
?metalonda
?metalondaAll
library(MetaLonDA)
?metalondaAll
ls
ls()
memory.size(max = TRUE)
memory.limit(size = NA)
install.packages("MetaLonDA")
library(MetaLonDA)
?metalonda
?remove.packages()
remove.packages("MetaLonDA")
library(MetaLonDA)
?metalonda
install.packages("MetaLonDA")
install.packages("MetaLonDA")
library("MetaLonDA")
?metalonda
?metalondaAll
rref <- bibentry(
bibtype = "Manual",
title = "R: A Language and Environment for Statistical Computing",
author = person("R Core Team"),
organization = "R Foundation for Statistical Computing",
address = "Vienna, Austria",
year = 2014,
url = "https://www.R-project.org/")
rref
?citation
citation("MetaLonDA")
citation("ggplot2")
citation("deseq2")
library("deseq2")
library(deseq2)
library(DESeq2)
citation(DESeq2)
library(DESeq2)
citation(DESeq2)
citation(deseq2)
?`DESeq2-package`
cran_downloads(when = "last-week", packages = c("ggplot2", "httr"))
library(cranlogs)
cran_downloads(when = "last-week", packages = c("MetaLonDA"))
library(MetaLonDA)
setwd("~/Dropbox/metalonda_work/metalonda_yang")
data = read.csv("OTU_for metalonda.csv", as.is = TRUE, check.names = FALSE, header = FALSE)
View(data)
DataSubset = data[, which(data[2,]=="Group" | data[2,]=='LT' | data[2,]=='LC')]
dim(DataSubset)
View(DataSubset)
time.vec = as.integer(DataSubset[1,][-1])
group.vec = factor(as.character(DataSubset[2,])[-1])
id.vec = factor(as.character(DataSubset[3,])[-1])
length((time.vec))
length((group.vec))
length((id.vec))
length(unique(time.vec))
length(unique(group.vec))
length(unique(id.vec))
countTable = DataSubset[-c(1:3),]
colnames(countTable) = as.character(DataSubset[4,])
countTable = countTable[-1,]
rownames(countTable) = countTable[,1]
countTable = countTable[,-1]
countTable2 = data.frame(sapply(countTable, function(x) as.numeric(as.character(x))))
rownames(countTable2) = rownames(countTable)
dim(countTable2)
View(countTable2)
points = seq(1, 12, length.out = 100)
?metalondaAll
output.metalonda.all = metalondaAll(Count = countTable2, Time = time.vec, Group = group.vec, ID = id.vec, n.perm = 100,
fit.method = "nbinomial", num.intervals = 100, parall = FALSE,
pvalue.threshold = 0.05, adjust.method = "none",
time.unit = "timepoint", norm.method = "none", prefix = "SkinTx", norm.method="CSS")
output.metalonda.all = metalondaAll(Count = countTable2, Time = time.vec, Group = group.vec, ID = id.vec, n.perm = 100,
fit.method = "nbinomial", num.intervals = 100, parall = FALSE,
pvalue.threshold = 0.05, adjust.method = "none",
time.unit = "timepoint", norm.method = "css", prefix = "SkinTx")
output.metalonda.all = metalondaAll(Count = countTable2, Time = time.vec, Group = group.vec, ID = id.vec, n.perm = 100,
fit.method = "nbinomial", num.intervals = 100, parall = FALSE,
pvalue.threshold = 0.05, adjust.method = "none",
time.unit = "timepoint", norm.method = "median_ratio", prefix = "SkinTx")
output.metalonda.all = metalondaAll(Count = countTable2, Time = time.vec, Group = group.vec, ID = id.vec, n.perm = 100,
fit.method = "nbinomial", num.intervals = 100, parall = FALSE,
pvalue.threshold = 0.05, adjust.method = "none",
time.unit = "timepoint", norm.method = "median_ratio", prefix = "SkinTx")
output.metalonda.all = metalondaAll(Count = countTable2, Time = time.vec, Group = group.vec, ID = id.vec, n.perm = 100,
fit.method = "nbinomial", num.intervals = 100, parall = FALSE,
pvalue.threshold = 0.05, adjust.method = "none",
time.unit = "timepoint", norm.method = "ra", prefix = "SkinTx")
output.metalonda.all = metalondaAll(Count = countTable2, Time = time.vec, Group = group.vec, ID = id.vec, n.perm = 100,
fit.method = "nbinomial", num.intervals = 100, parall = FALSE,
pvalue.threshold = 0.05, adjust.method = "none",
time.unit = "timepoint", norm.method = "tmm", prefix = "SkinTx")
output.metalonda.all = metalondaAll(Count = countTable2, Time = time.vec, Group = group.vec, ID = id.vec, n.perm = 100,
fit.method = "nbinomial", num.intervals = 100, parall = FALSE,
pvalue.threshold = 0.05, adjust.method = "none",
time.unit = "timepoint", norm.method = "log10", prefix = "SkinTx")
output.metalonda.all = metalondaAll(Count = countTable2, Time = time.vec, Group = group.vec, ID = id.vec, n.perm = 100,
fit.method = "nbinomial", num.intervals = 100, parall = FALSE,
pvalue.threshold = 0.05, adjust.method = "none",
time.unit = "timepoint", norm.method = "median_ratio", prefix = "SkinTx")
setwd("~/Dropbox/metalonda_work/updateMetalonda/MetaLonDA")
setwd("~/Dropbox/metalonda_work/updateMetalonda/MetaLonDA")
